{"version":3,"file":"static/js/134.ea35a4b7.chunk.js","mappings":"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","sources":["components/hooks/useHttp.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\n\nexport const useHttp = (fn, params) => {\n  const [data, setData] = useState()\n  useEffect(() => {\n    fn(params).then(data => setData(data))\n  }, [params, fn])\n  return [data, setData]\n}","import React, { useState } from 'react'\nimport { fetchMovieByQuery } from '../services/api'\nimport { Link, useLocation, useSearchParams } from 'react-router-dom/dist';\nimport { useHttp } from '../components/hooks/useHttp';\n\nconst Movies = () => {\n\n  const [searchParams, setSearchParams] = useSearchParams()\n  const query = searchParams.get('query') || ''\n  const [movies] = useHttp(fetchMovieByQuery, query)\n  const location = useLocation()\n  const [value, setValue] = useState('')\n  const handleSetSearchQuery = () => {\n    setSearchParams(value ? { query: value } : {})\n  }\n\n  return (\n    <>\n      <div>\n        <input value={value} onChange={e => setValue(e.target.value)} type='text' />\n        <button onClick={(handleSetSearchQuery)}>Search movies...</button>\n      </div>\n      <ul>\n        {movies?.map(movie =>\n          <li key={movie.id}>\n            <Link state={{ from: location }} to={movie.id.toString()}> {movie.original_title}</Link>\n          </li>\n        )}\n      </ul>\n    </>\n\n  )\n}\n\nexport default Movies","import axios from \"axios\"\nexport const BASE_URL_FOR_IMG = 'https://image.tmdb.org/t/p/w500'\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '85e6bdfb8ec7cb55f85ebb0c0a551952'\nconst options = {\n  params: {\n    api_key: API_KEY,\n  }\n}\n\nexport const fetchTrending = async () => {\n  // const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`)\n  const { data } = await axios.get(`trending/movie/day`, options)\n  return data.results\n}\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`movie/${id}`, options)\n  // console.log(data)\n  return data\n}\n\nexport const fetchMovieByIdCast = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`, options)\n  // console.log(data)\n  return data\n}\n\nexport const fetchMovieByIdReviews = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`, options)\n  // console.log(data)\n  return data\n}\n\nexport const fetchMovieByQuery = async query => {\n  const { data } = await axios.get(`search/movie?query=${query}`, options)\n  return data.results\n}\n\n// movie?query=\n// https://api.themoviedb.org/3/trending/movie\n// https://api.themoviedb.org/3/search/movie\n// https://api.themoviedb.org/3/movie/{movie_id}\n// https://api.themoviedb.org/3/movie/{movie_id}/credits\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews\n"],"names":["useHttp","fn","params","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","then","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","_useHttp","fetchMovieByQuery","movies","location","useLocation","value","setValue","_jsxs","_Fragment","children","_jsx","onChange","e","target","type","onClick","map","movie","Link","state","from","to","id","toString","original_title","BASE_URL_FOR_IMG","axios","options","api_key","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","_context","prev","next","sent","abrupt","results","stop","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","_context2","concat","_x","fetchMovieByIdCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchMovieByIdReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}